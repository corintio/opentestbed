package bots.mctsbot.ai.bots.bot.gametree.tls.metatree;

import java.util.ArrayList;
import java.util.List;

import bots.mctsbot.ai.bots.bot.gametree.tls.nodes.AbstractTLSNode;
import bots.mctsbot.ai.bots.bot.gametree.tls.nodes.LeafNode;
import bots.mctsbot.ai.bots.bot.gametree.tls.nodes.RootNode;
import bots.mctsbot.ai.bots.bot.gametree.tls.strategies.selection.SelectionStrategy;
import bots.mctsbot.common.elements.player.PlayerId;

public abstract class TLSTree {

	public final PlayerId player;

	public PlayerId getPlayer() {
		return player;
	}

	public RootNode getRoot() {
		return root;
	}

	public AbstractTLSNode getParent() {
		return parent;
	}

	public final RootNode root;
	public final AbstractTLSNode parent;
	private final List<LeafNode> children = new ArrayList<LeafNode>();

	public TLSTree(PlayerId player, AbstractTLSNode parent) {
		this.player = player;
		this.parent = parent;
		root = new RootNode(this);
	}

	public boolean isRoot() {
		return parent == null;
	}

	public AbstractTLSNode selectChild(SelectionStrategy moveSelectionStrategy) {
		// TODO Auto-generated method stub
		return null;
	}

	public String getNbSamples() {
		// TODO Auto-generated method stub
		return null;
	}

	public LeafNode selectRecursively() {
		return root.selectRecursively();
	}

	/*
	public LeafNode selectChild() {
		return selectionStrategy.select(this);
	}
	*/

	public List<LeafNode> getChildren() {
		return children;
	}

	public abstract SelectionStrategy getSelectionStrategy();

}
